# Task ID: 14
# Title: Implement Non-Partitioned Dagster Assets
# Status: pending
# Dependencies: 4, 5, 6, 7, 8, 9, 10, 13
# Priority: high
# Description: Create Dagster assets for the ESPN API source without partitioning for full data loads.
# Details:
Create the assets.py file in the dagster_bronze_layer directory to define the non-partitioned Dagster assets:

```python
from dagster import AssetExecutionContext
from dagster_embedded_elt.dlt import DagsterDltResource, dlt_assets
import dlt

from ..dlt_sources.espn_api_source import espn_ncaa_basketball_source

@dlt_assets(
    dlt_source=espn_ncaa_basketball_source(),
    dlt_pipeline=dlt.pipeline(
        pipeline_name="espn_bronze_pipeline",
        dataset_name="bronze",  # This will be the schema in DuckDB
        destination="duckdb",
        progress="log"
    ),
    name="bronze_espn_assets",
    group_name="bronze_layer"
)
def espn_bronze_assets_definition(context: AssetExecutionContext, dlt_resource: DagsterDltResource):
    """Dagster assets for loading ESPN NCAA Basketball data into the bronze layer."""
    # Run the dlt pipeline
    yield from dlt_resource.run(context=context)
```

This defines a set of Dagster assets using the `@dlt_assets` decorator. The assets use the ESPN API source defined earlier and configure a dlt pipeline to load data into the "bronze" schema in DuckDB.

# Test Strategy:
Test that the assets can be materialized successfully. Verify that data is loaded into the correct tables in the bronze schema of the DuckDB database.
