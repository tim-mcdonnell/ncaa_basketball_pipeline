# Task ID: 9
# Title: Implement Venues and Records Resources
# Status: pending
# Dependencies: 4
# Priority: medium
# Description: Extend the ESPN API source with resources for fetching venue information and team records.
# Details:
Add new resources to the espn_ncaa_basketball_source for fetching venue information and team records:

```python
@dlt.resource(
    primary_key=["id"],
    write_disposition="merge"
)
def venues(event_data: Dict):
    """Extract venue information from event data"""
    venues = []
    for competition in event_data.get("competitions", []):
        venue = competition.get("venue", {})
        if venue and "id" in venue:
            venues.append(venue)
    return venues

@dlt.resource(
    primary_key=["team_id", "type", "season_id"],
    write_disposition="merge"
)
def team_records(team_id: str, season_id: Optional[str] = None):
    """Fetch records for a specific team"""
    url = f"{base_url}/teams/{team_id}/record"
    params = {}
    if season_id:
        params["season"] = season_id
        
    response = requests.get(url, params=params)
    response.raise_for_status()
    records = []
    for record in response.json().get("records", []):
        record_data = {
            "team_id": team_id,
            "type": record.get("type"),
            "summary": record.get("summary"),
            "wins": record.get("wins"),
            "losses": record.get("losses"),
            "ties": record.get("ties", 0),
            "season_id": season_id or "current"
        }
        records.append(record_data)
    return records
```

Then update the source function to include these resources:

```python
# Return all resources
return {
    "seasons": seasons,
    "season_types": season_types,
    "weeks": weeks,
    "events": events,
    "event_competitors": event_competitors,
    "teams": teams,
    "event_details": event_details,
    "team_details": team_details,
    "team_roster": team_roster,
    "team_statistics": team_statistics,
    "player_statistics": player_statistics,
    "plays": plays,
    "venues": venues,
    "team_records": team_records,
    # Add more resources
}
```

# Test Strategy:
Test the venues and team_records resources with mock API responses. Verify that they correctly extract and structure the data.
